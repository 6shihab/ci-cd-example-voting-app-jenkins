pipeline {
    agent any
    

    stages {
        
        stage('Cloning Git') {
            steps {
                
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/6shihab/ci-cd-example-voting-app-jenkins.git']])
            }
        }
        
        stage('Build Docker File'){
            steps{
                script{
                    sh '''
                        IMAGE_VOTE="6shihab/example-voting-app_vote"
                        docker build -t $IMAGE_VOTE:${BUILD_NUMBER} ./vote
                        docker tag $IMAGE_VOTE:${BUILD_NUMBER} $IMAGE_VOTE:latest
                    '''
                    
                    sh '''
                        IMAGE_WORKER="6shihab/example-voting-app_worker"
                        docker build -t $IMAGE_WORKER:${BUILD_NUMBER} ./worker
                        docker tag $IMAGE_WORKER:${BUILD_NUMBER} $IMAGE_WORKER:latest
                    '''
                    
                    sh '''
                        IMAGE_RESULT="6shihab/example-voting-app_result"
                        docker build -t $IMAGE_RESULT:${BUILD_NUMBER} ./result
                        docker tag $IMAGE_RESULT:${BUILD_NUMBER} $IMAGE_RESULT:latest
                    '''
                }
            }
        }
        stage('Push To DockerHub'){
            steps{
                script{
                    withCredentials([string(credentialsId: 'dockerhubpwd', variable: 'dockerhubpass')]) {
                        sh 'docker login -u 6shihab -p ${dockerhubpass}'
                    }
                    sh 'docker push 6shihab/example-voting-app_vote:${BUILD_NUMBER}'
                    sh 'docker push 6shihab/example-voting-app_worker:${BUILD_NUMBER}'
                    sh 'docker push 6shihab/example-voting-app_result:${BUILD_NUMBER}'
                    
                    sh '''
                        docker push 6shihab/example-voting-app_vote:latest
                        docker push 6shihab/example-voting-app_worker:latest
                        docker push 6shihab/example-voting-app_result:latest
                    '''
                }
                
                sh 'docker rmi -f $(docker images -aq)'
            }
        }
        
        /*stage('Deploy to k8s'){
            steps{
                withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'kubeConfigFile', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                    sh 'kubectl get nodes'
                    script{
                        sh 'kubectl apply -f k8s-specifications/'
                        sh 'kubectl get pods'
                    }
                }
            }
        }*/ 
    }
}
